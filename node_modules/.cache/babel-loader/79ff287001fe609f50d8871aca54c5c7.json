{"ast":null,"code":"var _jsxFileName = \"D:\\\\aastproject\\\\Maimoji\\\\src\\\\ChatHistory.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './UserProfile.css';\nimport Button from '@material-ui/core/Button'; // import logo from './logo.png';\n\nimport VideoInput from './views/VideoInput';\nimport * as faceapi from 'face-api.js'; // import ScriptTag from 'react-script-tag';\n// import faceapii from './faceapii';\n// import * as faceapi from 'face-api.js';\n\nexport async function loadModels() {\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n  await faceapi.loadFaceExpressionModel(MODEL_URL); // alert(MODEL_URL)\n}\nexport async function getFullFaceDescription(blob, inputSize = 512) {\n  // const detections = await faceapi.detectAllFaces(blob, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n  // const resizedDetections = faceapi.resizeResults(detections, inputSize);\n  // var neutral = detections[0].expressions.neutral;\n  // console.log(neutral)\n  // var happy = detections[0].expressions.happy;\n  // var sad = detections[0].expressions.sad;\n  // tiny_face_detector options;\n  let scoreThreshold = 0.5;\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\n    inputSize,\n    scoreThreshold\n  }); // const useTinyModel = true;\n  // fetch image to api\n  // let img = await faceapi.fetchImage(blob);\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n\n  let fullDesc = await faceapi.detectAllFaces(img, OPTION).withFaceExpressions();\n  console.log(fullDesc);\n  var neutral = \"\";\n  var happy = \"-1\";\n  var sad = \"\";\n\n  try {\n    neutral = fullDesc[0].expressions.neutral;\n    happy = fullDesc[0].expressions.happy;\n    sad = fullDesc[0].expressions.sad;\n    sessionStorage.setItem(\"neutral\", neutral);\n    sessionStorage.setItem(\"happy\", happy);\n    sessionStorage.setItem(\"sad\", sad);\n    console.log(\"neutarl = \" + neutral);\n    console.log(\"happy = \" + happy);\n    console.log(\"sad = \" + sad);\n  } catch {\n    console.log(\"No Dedection\");\n  }\n\n  return fullDesc;\n}\nconst maxDescriptorDistance = 0.5;\nexport async function createMatcher(faceProfile) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(member => new faceapi.LabeledFaceDescriptors(faceProfile[member].name, faceProfile[member].descriptors.map(descriptor => new Float32Array(descriptor)))); // Create face matcher (maximum descriptor distance is 0.5)\n\n  let faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, maxDescriptorDistance);\n  return faceMatcher;\n}\n\nclass ChatHistory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      axios.post('https://maimoji.herokuapp.com/api/message', this.state).then(response => {\n        var mgahd = response.data.boolean; //  var loops = response.data.loop;\n\n        console.log(response.data);\n\n        if (mgahd === \"True\") {\n          var whats = response.data.whatsapp;\n          window.location.replace(whats); // console.log(response.data)\n          //   window.location.replace(\"http://localhost:3000/chathistory\")\n        } else {\n          alert(\"Error\");\n          console.log(mgahd);\n        } //document.getElementById(\"Demo\").innerHTML = mgahd;\n\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    var neutral = sessionStorage.getItem(\"neutral\");\n    var happy = sessionStorage.getItem(\"happy\");\n    var sad = sessionStorage.getItem(\"sad\");\n    var sender = sessionStorage.getItem(\"id\");\n    var reciver = JSON.parse(window.localStorage.getItem(\"rec\")); // Retrieving\n\n    this.state = {\n      sad: sad,\n      happy: happy,\n      neutral: neutral,\n      sender: sender,\n      reciver: reciver // mgahd: 'False'\n\n    };\n  }\n\n  render() {\n    // require(\"script\")\n    var messages = JSON.parse(window.localStorage.getItem(\"messages\")); // Retrieving\n    // var id = sessionStorage.getItem(\"id\");\n\n    var loops = JSON.parse(window.localStorage.getItem(\"loops\")); // Retrieving\n\n    var dates = JSON.parse(window.localStorage.getItem(\"dates\")); // Retrieving\n\n    var senders = JSON.parse(window.localStorage.getItem(\"senders\")); // Retrieving\n\n    var recivers = JSON.parse(window.localStorage.getItem(\"recivers\")); // Retrieving\n    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n    // const items = []\n    // for (const [index, value] of elements.entries()) {\n    //     items.push(<li key={index}>{value}</li>)\n\n    var sender1 = [];\n    var date1 = [];\n    var reciever1 = [];\n    var message1 = [];\n\n    for (var i = 0; i < loops; i++) {\n      sender1.push(senders[i]);\n      date1.push(dates[i]);\n      reciever1.push(recivers[i]);\n      message1.push(messages[i]);\n    }\n\n    const {\n      sender,\n      reciver,\n      neutral,\n      happy,\n      sad\n    } = this.state;\n    console.log(\"Happy: \" + happy);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"about-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(VideoInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"dark-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, \"Chat History\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row about-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, dates.map((value, index) => {\n      var z = value;\n      console.log(z); // return <option value={z}>{Arr[index]}</option>\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card text-white bg-info mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 44\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 41\n        }\n      }, date1[index]), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        class: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 45\n        }\n      }, \"Sender: \", sender1[index]), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 45\n        }\n      }, message1[index])));\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      class: \"Right\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"neutral5\",\n      type: \"hidden\",\n      value: neutral,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"happy5\",\n      type: \"hidden\",\n      value: happy,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sad5\",\n      type: \"hidden\",\n      value: sad,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sender5\",\n      type: \"hidden\",\n      value: sender,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"reciver5\",\n      type: \"hidden\",\n      value: reciver,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fixed-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"msg\",\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Recipient's username\",\n      \"aria-label\": \"Recipient's username\",\n      \"aria-describedby\": \"button-addon2\",\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"btn btn-outline-secondary\",\n      type: \"submit\",\n      id: \"button-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 49\n      }\n    }, \"Send\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n}\n\nexport default ChatHistory;","map":{"version":3,"sources":["D:/aastproject/Maimoji/src/ChatHistory.js"],"names":["React","Component","axios","Button","VideoInput","faceapi","loadModels","MODEL_URL","process","env","PUBLIC_URL","loadTinyFaceDetectorModel","loadFaceLandmarkTinyModel","loadFaceRecognitionModel","loadFaceExpressionModel","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","TinyFaceDetectorOptions","fullDesc","detectAllFaces","img","withFaceExpressions","console","log","neutral","happy","sad","expressions","sessionStorage","setItem","maxDescriptorDistance","createMatcher","faceProfile","members","Object","keys","labeledDescriptors","map","member","LabeledFaceDescriptors","name","descriptors","descriptor","Float32Array","faceMatcher","FaceMatcher","ChatHistory","constructor","props","changeHandler","e","setState","target","value","submitHandler","preventDefault","state","post","then","response","mgahd","data","boolean","whats","whatsapp","window","location","replace","alert","catch","error","getItem","sender","reciver","JSON","parse","localStorage","render","messages","loops","dates","senders","recivers","sender1","date1","reciever1","message1","i","push","index","z"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './UserProfile.css';\r\nimport Button from '@material-ui/core/Button';\r\n// import logo from './logo.png';\r\nimport VideoInput from './views/VideoInput'\r\nimport * as faceapi from 'face-api.js';\r\n// import ScriptTag from 'react-script-tag';\r\n// import faceapii from './faceapii';\r\n// import * as faceapi from 'face-api.js';\r\n\r\n\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n  await faceapi.loadFaceExpressionModel(MODEL_URL);\r\n  // alert(MODEL_URL)\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // const detections = await faceapi.detectAllFaces(blob, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\r\n  // const resizedDetections = faceapi.resizeResults(detections, inputSize);\r\n  // var neutral = detections[0].expressions.neutral;\r\n  // console.log(neutral)\r\n  // var happy = detections[0].expressions.happy;\r\n  // var sad = detections[0].expressions.sad;\r\n  // tiny_face_detector options;\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  });\r\n  // const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  // let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceExpressions();\r\n\r\n  console.log(fullDesc)\r\n  var neutral = \"\";\r\n  var happy = \"-1\";\r\n  var sad = \"\";\r\n  try {\r\n    neutral = fullDesc[0].expressions.neutral;\r\n    happy = fullDesc[0].expressions.happy;\r\n    sad = fullDesc[0].expressions.sad;\r\n    sessionStorage.setItem(\"neutral\",neutral)\r\n    sessionStorage.setItem(\"happy\",happy)\r\n    sessionStorage.setItem(\"sad\",sad)\r\n    console.log(\"neutarl = \" + neutral)\r\n    console.log(\"happy = \" + happy)\r\n    console.log(\"sad = \" + sad)\r\n  } catch{ console.log(\"No Dedection\") }\r\n  return fullDesc;\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5;\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile);\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n  return faceMatcher;\r\n}\r\n\r\n\r\n\r\nclass ChatHistory extends (Component) {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        var neutral = sessionStorage.getItem(\"neutral\")\r\n        var happy = sessionStorage.getItem(\"happy\")\r\n        var sad = sessionStorage.getItem(\"sad\")\r\n        var sender = sessionStorage.getItem(\"id\");\r\n        var reciver = JSON.parse(window.localStorage.getItem(\"rec\")); // Retrieving\r\n\r\n        this.state = {\r\n\r\n            sad: sad,\r\n            happy: happy,\r\n            neutral: neutral,\r\n            sender: sender,\r\n            reciver: reciver\r\n            // mgahd: 'False'\r\n        }\r\n    }\r\n\r\n    changeHandler = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        axios\r\n            .post('https://maimoji.herokuapp.com/api/message', this.state)\r\n            .then(response => {\r\n\r\n                var mgahd = response.data.boolean;\r\n                //  var loops = response.data.loop;\r\n                console.log(response.data)\r\n\r\n                if (mgahd === \"True\") {\r\n                    var whats = response.data.whatsapp\r\n                    window.location.replace(whats)\r\n\r\n\r\n                    // console.log(response.data)\r\n\r\n\r\n\r\n                    //   window.location.replace(\"http://localhost:3000/chathistory\")\r\n\r\n                } else {\r\n                    alert(\"Error\");\r\n                    console.log(mgahd)\r\n                }\r\n                //document.getElementById(\"Demo\").innerHTML = mgahd;\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n\r\n        // require(\"script\")\r\n        var messages = JSON.parse(window.localStorage.getItem(\"messages\")); // Retrieving\r\n        // var id = sessionStorage.getItem(\"id\");\r\n        var loops = JSON.parse(window.localStorage.getItem(\"loops\")); // Retrieving\r\n        var dates = JSON.parse(window.localStorage.getItem(\"dates\")); // Retrieving\r\n        var senders = JSON.parse(window.localStorage.getItem(\"senders\")); // Retrieving\r\n        var recivers = JSON.parse(window.localStorage.getItem(\"recivers\")); // Retrieving\r\n\r\n        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        //////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n        // const items = []\r\n\r\n        // for (const [index, value] of elements.entries()) {\r\n        //     items.push(<li key={index}>{value}</li>)\r\n\r\n        var sender1 = [];\r\n        var date1 = [];\r\n        var reciever1 = [];\r\n        var message1 = [];\r\n        for (var i = 0; i < loops; i++) {\r\n            sender1.push(senders[i])\r\n            date1.push(dates[i])\r\n            reciever1.push(recivers[i])\r\n            message1.push(messages[i])\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        const { sender, reciver, neutral, happy, sad } = this.state\r\n\r\n        console.log(\"Happy: \" + happy);\r\n\r\n        return (\r\n\r\n\r\n            <div>\r\n\r\n\r\n\r\n                {/* <div class=\"card text-center\">\r\n                    <div class=\"card-header\">\r\n                        <ul class=\"nav nav-pills card-header-pills\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"/UserProfile\" variant=\"body2\">UserProfile</a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link active\" href=\"/Contacts\" variant=\"body2\">Contacts</a>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div> */}\r\n\r\n                {/* <div>\r\n                    {items}\r\n                </div> */}\r\n\r\n                <div>\r\n\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"about-avatar\">\r\n                            <VideoInput></VideoInput>\r\n                        </div>\r\n                    </div>\r\n                    <h1 class=\"dark-color\">Chat History</h1>\r\n                    <h2>\r\n\r\n                        <div class=\"row about-list\">\r\n                            <div class=\"col-md-6\">\r\n\r\n                                {/* <input name=\"sender\" type=\"hidden\" value={sen} onChange={this.changeHandler}></input> */}\r\n                                {dates.map((value, index) => {\r\n                                    var z = value;\r\n                                    console.log(z)\r\n                                    // return <option value={z}>{Arr[index]}</option>\r\n\r\n\r\n                                    return <div class=\"card text-white bg-info mb-3\" >\r\n                                        <div class=\"card-header\">{date1[index]}</div>\r\n                                        <div class=\"card-body\">\r\n                                            <h1 class=\"card-title\">Sender: {sender1[index]}</h1>\r\n\r\n                                            <p class=\"card-text\">{message1[index]}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                })}\r\n\r\n                                <form class=\"Right\" onSubmit={this.submitHandler}>\r\n\r\n                                    {/* <video id=\"video\" width=\"720\" height=\"560\" autoPlay muted></video> */}\r\n                                    {/* <ScriptTag  src=\"faceapii.js\" />\r\n                                    <ScriptTag src=\"script.js\" /> */}\r\n                                    <input name=\"neutral5\" type=\"hidden\" value={neutral} onChange={this.changeHandler}></input>\r\n                                    <input name=\"happy5\" type=\"hidden\" value={happy} onChange={this.changeHandler}></input>\r\n                                    <input name=\"sad5\" type=\"hidden\" value={sad} onChange={this.changeHandler}></input>\r\n                                    <input name=\"sender5\" type=\"hidden\" value={sender} onChange={this.changeHandler}></input>\r\n                                    <input name=\"reciver5\" type=\"hidden\" value={reciver} onChange={this.changeHandler}></input>\r\n                                    <div class=\"fixed-bottom\">\r\n                                        <div class=\"input-group mb-3\">\r\n\r\n                                            <input name=\"msg\" type=\"text\" class=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" onChange={this.changeHandler}></input>\r\n                                            <div class=\"input-group-append\">\r\n                                                <Button class=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-addon2\">Send</Button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <br></br>\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </h2>\r\n\r\n\r\n\r\n                </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ChatHistory\r\n"]},"metadata":{},"sourceType":"module"}