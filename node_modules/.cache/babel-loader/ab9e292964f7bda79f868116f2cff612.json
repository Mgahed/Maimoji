{"ast":null,"code":"var _jsxFileName = \"D:\\\\aastproject\\\\Maimoji\\\\src\\\\views\\\\VideoInput.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face'; // Import face profile\n\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\n\nconst WIDTH = 500;\nconst HEIGHT = 500;\nconst inputSize = 160;\n\nclass VideoInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = async () => {\n      await loadModels();\n      this.setState({\n        faceMatcher: await createMatcher(JSON_PROFILE)\n      });\n      this.setInputDevice();\n    };\n\n    this.setInputDevice = () => {\n      navigator.mediaDevices.enumerateDevices().then(async devices => {\n        let inputDevice = await devices.filter(device => device.kind === 'videoinput');\n\n        if (inputDevice.length < 2) {\n          await this.setState({\n            facingMode: 'user'\n          });\n        } else {\n          await this.setState({\n            facingMode: {\n              exact: 'environment'\n            }\n          });\n        }\n\n        this.startCapture();\n      });\n    };\n\n    this.startCapture = () => {\n      this.interval = setInterval(() => {\n        this.capture();\n      }, 1500);\n    };\n\n    this.capture = async () => {\n      if (!!this.webcam.current) {\n        await getFullFaceDescription(this.webcam.current.getScreenshot(), inputSize).then(fullDesc => {\n          if (!!fullDesc) {\n            this.setState({\n              detections: fullDesc.map(fd => fd.detection),\n              descriptors: fullDesc.map(fd => fd.descriptor)\n            });\n          }\n        }); // if (!!this.state.descriptors && !!this.state.faceMatcher) {\n        //   let match = await this.state.descriptors.map(descriptor =>\n        //     this.state.faceMatcher.findBestMatch(descriptor)\n        //   );\n        //   this.setState({ match });\n        // }\n      }\n    };\n\n    this.webcam = React.createRef();\n    this.state = {\n      fullDesc: null,\n      detections: null,\n      descriptors: null,\n      faceMatcher: null,\n      match: null,\n      facingMode: null\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    var happy1 = sessionStorage.getItem(\"happy\");\n    sessionStorage.setItem(\"happy1\", happy1);\n    console.log(\"This is happy = \" + happy1);\n    const {\n      detections,\n      match,\n      facingMode\n    } = this.state;\n    let videoConstraints = null; // let camera = '';\n\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode\n      };\n\n      if (facingMode === 'user') {// camera = 'Front';\n      } else {// camera = 'Back';\n        }\n    }\n\n    let drawBox = null;\n\n    if (!!detections) {\n      drawBox = detections.map((detection, i) => {\n        let _H = detection.box.height;\n        let _W = detection.box.width;\n        let _X = detection.box._x;\n        let _Y = detection.box._y;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: 'absolute',\n            border: 'solid',\n            borderColor: 'blue',\n            height: _H,\n            width: _W,\n            transform: `translate(${_X}px,${_Y}px)`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        }, !!match && !!match[i] ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            backgroundColor: 'blue',\n            border: 'solid',\n            borderColor: 'blue',\n            width: _W,\n            marginTop: 0,\n            color: '#fff',\n            transform: `translate(-3px,${_H}px)`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }\n        }, match[i]._label) : null));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Camera\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \" Expression will be dedected when blue border show up\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: WIDTH,\n        height: HEIGHT\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        width: WIDTH\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, !!videoConstraints ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Webcam, {\n      audio: false,\n      width: WIDTH,\n      height: HEIGHT,\n      ref: this.webcam,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: videoConstraints,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })) : null, !!drawBox ? drawBox : null)));\n  }\n\n}\n\nexport default withRouter(VideoInput);","map":{"version":3,"sources":["D:/aastproject/Maimoji/src/views/VideoInput.js"],"names":["React","Component","withRouter","Webcam","loadModels","getFullFaceDescription","createMatcher","JSON_PROFILE","require","WIDTH","HEIGHT","inputSize","VideoInput","constructor","props","componentWillMount","setState","faceMatcher","setInputDevice","navigator","mediaDevices","enumerateDevices","then","devices","inputDevice","filter","device","kind","length","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","fullDesc","detections","map","fd","detection","descriptors","descriptor","createRef","state","match","componentWillUnmount","clearInterval","render","happy1","sessionStorage","getItem","setItem","console","log","videoConstraints","width","height","drawBox","i","_H","box","_W","_X","_x","_Y","_y","position","border","borderColor","transform","backgroundColor","marginTop","color","_label","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\nconst WIDTH = 500;\r\nconst HEIGHT = 500;\r\nconst inputSize = 160;\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcam = React.createRef();\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    this.setInputDevice();\r\n  };\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\r\n      let inputDevice = await devices.filter(\r\n        device => device.kind === 'videoinput'\r\n      );\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: 'user'\r\n        });\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: 'environment' }\r\n        });\r\n      }\r\n      this.startCapture();\r\n    });\r\n  };\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture();\r\n    }, 1500);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then(fullDesc => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map(fd => fd.detection),\r\n            descriptors: fullDesc.map(fd => fd.descriptor)\r\n          });\r\n        }\r\n      });\r\n\r\n      // if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      //   let match = await this.state.descriptors.map(descriptor =>\r\n      //     this.state.faceMatcher.findBestMatch(descriptor)\r\n      //   );\r\n      //   this.setState({ match });\r\n      // }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var happy1 = sessionStorage.getItem(\"happy\")\r\n    sessionStorage.setItem(\"happy1\",happy1)\r\n    console.log(\"This is happy = \"+happy1);\r\n    const { detections, match, facingMode } = this.state;\r\n    let videoConstraints = null;\r\n    // let camera = '';\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      };\r\n      if (facingMode === 'user') {\r\n        // camera = 'Front';\r\n      } else {\r\n        // camera = 'Back';\r\n      }\r\n    }\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <p> Expression will be dedected when blue border show up</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT\r\n          }}\r\n        >\r\n          <div style={{ position: 'relative', width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: 'absolute' }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput);\r\n"]},"metadata":{},"sourceType":"module"}