{"ast":null,"code":"const video = document.getElementById('video');\nPromise.all([faceapi.nets.tinyFaceDetector.loadFromUri('/models'), faceapi.nets.faceLandmark68Net.loadFromUri('/models'), faceapi.nets.faceRecognitionNet.loadFromUri('/models'), faceapi.nets.faceExpressionNet.loadFromUri('/models')]).then(startVideo);\n\nfunction startVideo() {\n  navigator.getUserMedia({\n    video: {}\n  }, stream => video.srcObject = stream, err => console.error(err));\n}\n\nvar neutral1 = -1;\nvar happy1 = -1;\nvar sad1 = -1;\nvideo.addEventListener('play', () => {\n  const canvas = faceapi.createCanvasFromMedia(video);\n  document.body.append(canvas);\n  const displaySize = {\n    width: video.width,\n    height: video.height\n  };\n  faceapi.matchDimensions(canvas, displaySize);\n  setInterval(async () => {\n    const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n    const resizedDetections = faceapi.resizeResults(detections, displaySize);\n    canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height); // faceapi.draw.drawDetections(canvas, resizedDetections)\n    // faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\n    // faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\n\n    var neutral = detections[0].expressions.neutral;\n    var happy = detections[0].expressions.happy;\n    var sad = detections[0].expressions.sad;\n\n    if (neutral <= 1 && neutral >= 0) {\n      neutral1 = neutral;\n      sessionStorage.setItem(\"neutral1\", neutral1);\n    }\n\n    if (happy <= 1 && happy >= 0) {\n      happy1 = happy;\n      sessionStorage.setItem(\"happy1\", happy1);\n    }\n\n    if (sad <= 1 && sad >= 0) {\n      sad1 = sad;\n      sessionStorage.setItem(\"sad1\", sad1);\n    }\n\n    console.log(\"happy : \" + happy1);\n    console.log(\"neutral : \" + neutral1);\n    console.log(\"sad : \" + sad1);\n  }, 100);\n});\n\nfunction fn() {\n  return [neutral1, happy1, sad1];\n}","map":{"version":3,"sources":["C:/Users/Lenovo/maimoji/src/script.js"],"names":["video","document","getElementById","Promise","all","faceapi","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startVideo","navigator","getUserMedia","stream","srcObject","err","console","error","neutral1","happy1","sad1","addEventListener","canvas","createCanvasFromMedia","body","append","displaySize","width","height","matchDimensions","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","resizedDetections","resizeResults","getContext","clearRect","neutral","expressions","happy","sad","sessionStorage","setItem","log","fn"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AAEAC,OAAO,CAACC,GAAR,CAAY,CACVC,OAAO,CAACC,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0C,SAA1C,CADU,EAEVH,OAAO,CAACC,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2C,SAA3C,CAFU,EAGVH,OAAO,CAACC,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4C,SAA5C,CAHU,EAIVH,OAAO,CAACC,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2C,SAA3C,CAJU,CAAZ,EAKGI,IALH,CAKQC,UALR;;AAOA,SAASA,UAAT,GAAsB;AACpBC,EAAAA,SAAS,CAACC,YAAV,CACE;AAAEf,IAAAA,KAAK,EAAE;AAAT,GADF,EAEEgB,MAAM,IAAIhB,KAAK,CAACiB,SAAN,GAAkBD,MAF9B,EAGEE,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHT;AAKD;;AACD,IAAIG,QAAQ,GAAG,CAAC,CAAhB;AACA,IAAIC,MAAM,GAAG,CAAC,CAAd;AACA,IAAIC,IAAI,GAAG,CAAC,CAAZ;AACAvB,KAAK,CAACwB,gBAAN,CAAuB,MAAvB,EAA+B,MAAM;AACnC,QAAMC,MAAM,GAAGpB,OAAO,CAACqB,qBAAR,CAA8B1B,KAA9B,CAAf;AACAC,EAAAA,QAAQ,CAAC0B,IAAT,CAAcC,MAAd,CAAqBH,MAArB;AACA,QAAMI,WAAW,GAAG;AAAEC,IAAAA,KAAK,EAAE9B,KAAK,CAAC8B,KAAf;AAAsBC,IAAAA,MAAM,EAAE/B,KAAK,CAAC+B;AAApC,GAApB;AACA1B,EAAAA,OAAO,CAAC2B,eAAR,CAAwBP,MAAxB,EAAgCI,WAAhC;AACAI,EAAAA,WAAW,CAAC,YAAY;AACtB,UAAMC,UAAU,GAAG,MAAM7B,OAAO,CAAC8B,cAAR,CAAuBnC,KAAvB,EAA8B,IAAIK,OAAO,CAAC+B,uBAAZ,EAA9B,EAAqEC,iBAArE,GAAyFC,mBAAzF,EAAzB;AACA,UAAMC,iBAAiB,GAAGlC,OAAO,CAACmC,aAAR,CAAsBN,UAAtB,EAAkCL,WAAlC,CAA1B;AACAJ,IAAAA,MAAM,CAACgB,UAAP,CAAkB,IAAlB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqC,CAArC,EAAwCjB,MAAM,CAACK,KAA/C,EAAsDL,MAAM,CAACM,MAA7D,EAHsB,CAItB;AACA;AACA;;AACA,QAAIY,OAAO,GAAGT,UAAU,CAAC,CAAD,CAAV,CAAcU,WAAd,CAA0BD,OAAxC;AACA,QAAIE,KAAK,GAAGX,UAAU,CAAC,CAAD,CAAV,CAAcU,WAAd,CAA0BC,KAAtC;AACA,QAAIC,GAAG,GAAGZ,UAAU,CAAC,CAAD,CAAV,CAAcU,WAAd,CAA0BE,GAApC;;AACA,QAAIH,OAAO,IAAE,CAAT,IAAYA,OAAO,IAAE,CAAzB,EAA4B;AAC1BtB,MAAAA,QAAQ,GAAGsB,OAAX;AACAI,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAkC3B,QAAlC;AACD;;AACD,QAAIwB,KAAK,IAAE,CAAP,IAAUA,KAAK,IAAE,CAArB,EAAwB;AACtBvB,MAAAA,MAAM,GAAGuB,KAAT;AACAE,MAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAgC1B,MAAhC;AACD;;AACD,QAAIwB,GAAG,IAAE,CAAL,IAAQA,GAAG,IAAE,CAAjB,EAAoB;AAClBvB,MAAAA,IAAI,GAAGuB,GAAP;AACAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BzB,IAA9B;AACD;;AAEDJ,IAAAA,OAAO,CAAC8B,GAAR,CAAY,aAAa3B,MAAzB;AACAH,IAAAA,OAAO,CAAC8B,GAAR,CAAY,eAAe5B,QAA3B;AACAF,IAAAA,OAAO,CAAC8B,GAAR,CAAY,WAAW1B,IAAvB;AACD,GA1BU,EA0BR,GA1BQ,CAAX;AA2BD,CAhCD;;AAiCA,SAAS2B,EAAT,GAAa;AACb,SAAO,CAAC7B,QAAD,EAAWC,MAAX,EAAmBC,IAAnB,CAAP;AACC","sourcesContent":["const video = document.getElementById('video')\r\n\r\nPromise.all([\r\n  faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\r\n  faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\r\n  faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\r\n  faceapi.nets.faceExpressionNet.loadFromUri('/models')\r\n]).then(startVideo)\r\n\r\nfunction startVideo() {\r\n  navigator.getUserMedia(\r\n    { video: {} },\r\n    stream => video.srcObject = stream,\r\n    err => console.error(err)\r\n  )\r\n}\r\nvar neutral1 = -1;\r\nvar happy1 = -1;\r\nvar sad1 = -1;\r\nvideo.addEventListener('play', () => {\r\n  const canvas = faceapi.createCanvasFromMedia(video)\r\n  document.body.append(canvas)\r\n  const displaySize = { width: video.width, height: video.height }\r\n  faceapi.matchDimensions(canvas, displaySize)\r\n  setInterval(async () => {\r\n    const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions()\r\n    const resizedDetections = faceapi.resizeResults(detections, displaySize)\r\n    canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height)\r\n    // faceapi.draw.drawDetections(canvas, resizedDetections)\r\n    // faceapi.draw.drawFaceLandmarks(canvas, resizedDetections)\r\n    // faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\r\n    var neutral = detections[0].expressions.neutral\r\n    var happy = detections[0].expressions.happy\r\n    var sad = detections[0].expressions.sad\r\n    if (neutral<=1&&neutral>=0) {\r\n      neutral1 = neutral;\r\n      sessionStorage.setItem(\"neutral1\",neutral1);\r\n    }\r\n    if (happy<=1&&happy>=0) {\r\n      happy1 = happy;\r\n      sessionStorage.setItem(\"happy1\",happy1);\r\n    }\r\n    if (sad<=1&&sad>=0) {\r\n      sad1 = sad;\r\n      sessionStorage.setItem(\"sad1\",sad1);\r\n    }\r\n\r\n    console.log(\"happy : \" + happy1);\r\n    console.log(\"neutral : \" + neutral1);\r\n    console.log(\"sad : \" + sad1);\r\n  }, 100)\r\n})\r\nfunction fn(){\r\nreturn [neutral1, happy1, sad1];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}